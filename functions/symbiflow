# -*- mode: sh -*-

GO(sf) {
    BLOCK({{
      cd ~/src/symbiflow-arch-defs
      nix-shell ~/nix/sf-shell.nix
    }})
}

GO(bit2vivado) {
    source ~/src/prjxray/database/artix7/settings.sh
    source ~/src/prjxray/minitests/roi_harness/basys3-swbut.sh
    BLOCK({{
      FILE(runme.tcl, {{
create_project -force -part $::env(XRAY_PART) design design

read_verilog top_bit.v
synth_design -top top
write_checkpoint -force design_pre_force.dcp
source top_bit.v.tcl

create_clock -period 10.000 -name clk -waveform {0.000 5.000} [get_ports clk]

set_property CFGBVS VCCO [current_design]
set_property CONFIG_VOLTAGE 3.3 [current_design]
set_property BITSTREAM.GENERAL.PERFRAMECRC YES [current_design]
set_property IS_ENABLED 0 [get_drc_checks {LUTLP-1}]

write_checkpoint -force design_pre_place.dcp
place_design
route_design

write_checkpoint -force design.dcp
write_bitstream -force design.bit
save_project_as -force design.xpr}})
      ${XRAY_VIVADO} -source runme.tcl
      ${XRAY_BITREAD} -F $XRAY_ROI_FRAMES -o design.bits -z -y design.bit
      ${XRAY_BIT2FASM} --verbose design.bit > design.fasm
    }})
}

GO(write_bit) {
    source ~/src/prjxray/database/artix7/settings.sh
    openocd -f $XRAY_DIR/utils/openocd/board-digilent-basys3.cfg -c "init; pld load 0 $1; exit" || return
}

function __sf_build() {
    if [ ! -d ${SF_ROOT} ]; then
        return
    elif [ ! -d ${SF_ROOT}/build ]; then
        make -C ${SF_ROOT} env
    fi
    make -C ${SF_ROOT}/build $@
}

define({{build_target}}, {{
    if [ -n "$2" ]; then
        __sf_build $1_$2 || return
    fi}})

GO(shifter) {
    build_target(dram_shifter_$1, $2)
    cd ${SF_ROOT}/build/xc7/tests/dram_shifter/dram_shifter_${1}/artix7-xc7a50t-basys3-roi-virt-xc7a50t-basys3-test
}

GO(bshifter) {
    build_target(bram_shifter, $1)
    cd ${SF_ROOT}/build/xc7/tests/bram_shifter/bram_shifter/artix7-xc7a50t-basys3-roi-virt-xc7a50t-basys3-test
}

GO(dram_test) {
    if [ "$2" == "run" ]
    then
        if [ "$3" != "now" ]
        then
            build_target(dram_test_$1, prog)
        fi
        cd ${SF_ROOT}/build/xc7/tests/dram_test/dram_test_${1}/artix7-xc7a50t-basys3-roi-virt-xc7a50t-basys3-test
        python ${SF_ROOT}/xc7/tests/common/read_uart.py --baud 500000 /dev/ttyUSB1
    else
        build_target(dram_test_$1, $2)
        cd ${SF_ROOT}/build/xc7/tests/dram_test/dram_test_${1}/artix7-xc7a50t-basys3-roi-virt-xc7a50t-basys3-test
    fi
}

GO(dram) {
    build_target(dram_$1, 2)
    cd ${SF_ROOT}/build/xc7/tests/dram/dram_${1}/artix7-xc7a50t-basys3-roi-virt-xc7a50t-basys3-test
}

GO(set_sf) {
    export SF_ROOT=$PWD
}

GO(top_dram_n3) {
    BLOCK({{
      __sf_build top_dram_n3_prog
      ${SF_ROOT}/tests/9-scalable_proc/utils/receiver.py --baud 500000
    }})
}

GO(serial_port) {
    stty raw 500000 < /dev/ttyUSB1
    xxd /dev/ttyUSB1
}
